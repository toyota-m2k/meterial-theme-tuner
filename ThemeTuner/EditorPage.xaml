<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="ThemeTuner.EditorPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ThemeTuner"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <local:BoolVisibilityConverter x:Key="BoolVisibilityConverter"/>
        <local:NegBoolVisibilityConverter x:Key="NegBoolVisibilityConverter"/>
        <local:NegBoolConverter x:Key="NegBoolConverter"/>
        <local:PointStringConverter x:Key="PointStringConverter"/>
        <local:EnumToIntConverter x:Key="EnumToIntConverter"/>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Spacing="10">
            <Button Command="{x:Bind ViewModel.OpenFileCommand}">Open File</Button>
            <controls:Segmented
                SelectedIndex="{x:Bind ViewModel.DayNight.Value, Mode=TwoWay, Converter={StaticResource EnumToIntConverter}}"
                SelectionMode="Single">
                <controls:SegmentedItem Content="Light"/>
                <controls:SegmentedItem Content="Dark"/>
            </controls:Segmented>
            <controls:Segmented
                SelectedIndex="{x:Bind ViewModel.Contrast.Value, Mode=TwoWay, Converter={StaticResource EnumToIntConverter}}"
                SelectionMode="Single">
                <controls:SegmentedItem Content="Normal"/>
                <controls:SegmentedItem Content="Medium"/>
                <controls:SegmentedItem Content="High"/>
            </controls:Segmented>
            <Button Command="{x:Bind ViewModel.UndoCommand}" IsEnabled="{x:Bind ViewModel.History.CanUndo.Value, Mode=OneWay}">Undo</Button>
            <Button Command="{x:Bind ViewModel.RedoCommand}" IsEnabled="{x:Bind ViewModel.History.CanRedo.Value, Mode=OneWay}" Margin="-10,0,0,0">Redo</Button>
        </StackPanel>
        <Grid 
            Grid.Row="1" 
            Visibility="{x:Bind ViewModel.IsThemeAvailable.Value, Mode=OneWay}"
            AllowDrop="True"
            DragEnter="OnDragEnter"
            DragOver="OnDragOver"
            Drop="OnDrop"
            >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <local:ColorCellView Grid.Row="0" Grid.Column="0" Colors="{x:Bind ViewModel.Theme.Value.Primary.Base, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
            <local:ColorCellView Grid.Row="1" Grid.Column="0" Colors="{x:Bind ViewModel.Theme.Value.Primary.Container, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
            <local:ColorCellView Grid.Row="2" Grid.Column="0" Colors="{x:Bind ViewModel.Theme.Value.Primary.Fixed, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
            <local:ColorCellView Grid.Row="3" Grid.Column="0" Colors="{x:Bind ViewModel.Theme.Value.Primary.FixedDim, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
            <local:ColorCellView Grid.Row="4" Grid.Column="0" Colors="{x:Bind ViewModel.Theme.Value.Primary.Inverse, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>

            <local:ColorCellView Grid.Row="0" Grid.Column="1" Colors="{x:Bind ViewModel.Theme.Value.Secondary.Base, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
            <local:ColorCellView Grid.Row="1" Grid.Column="1" Colors="{x:Bind ViewModel.Theme.Value.Secondary.Container, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
            <local:ColorCellView Grid.Row="2" Grid.Column="1" Colors="{x:Bind ViewModel.Theme.Value.Secondary.Fixed, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
            <local:ColorCellView Grid.Row="3" Grid.Column="1" Colors="{x:Bind ViewModel.Theme.Value.Secondary.FixedDim, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>

            <local:ColorCellView Grid.Row="0" Grid.Column="2" Colors="{x:Bind ViewModel.Theme.Value.Tertiary.Base, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
            <local:ColorCellView Grid.Row="1" Grid.Column="2" Colors="{x:Bind ViewModel.Theme.Value.Tertiary.Container, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
            <local:ColorCellView Grid.Row="2" Grid.Column="2" Colors="{x:Bind ViewModel.Theme.Value.Tertiary.Fixed, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
            <local:ColorCellView Grid.Row="3" Grid.Column="2" Colors="{x:Bind ViewModel.Theme.Value.Tertiary.FixedDim, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>

            <Grid Grid.Row="0" Grid.Column="3" Grid.RowSpan="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <local:ColorCellView Grid.Row="0" Grid.Column="0" Colors="{x:Bind ViewModel.Theme.Value.Surface.Base, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
                <local:ColorCellView Grid.Row="1" Grid.Column="0" Colors="{x:Bind ViewModel.Theme.Value.Surface.Variant, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
                <local:ColorCellView Grid.Row="2" Grid.Column="0" Colors="{x:Bind ViewModel.Theme.Value.Surface.Inverse , Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
                <local:ColorCellView Grid.Row="3" Grid.Column="0" Colors="{x:Bind ViewModel.Theme.Value.Surface.Dim, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
                <local:ColorCellView Grid.Row="4" Grid.Column="0" Colors="{x:Bind ViewModel.Theme.Value.Surface.Bright, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
                <local:ColorCellView Grid.Row="5" Grid.Column="0" Colors="{x:Bind ViewModel.Theme.Value.Surface.ContainerHighest, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
                <local:ColorCellView Grid.Row="6" Grid.Column="0" Colors="{x:Bind ViewModel.Theme.Value.Surface.ContainerHigh, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
                <local:ColorCellView Grid.Row="7" Grid.Column="0" Colors="{x:Bind ViewModel.Theme.Value.Surface.Container, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
                <local:ColorCellView Grid.Row="8" Grid.Column="0" Colors="{x:Bind ViewModel.Theme.Value.Surface.ContainerLow, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
                <local:ColorCellView Grid.Row="9" Grid.Column="0" Colors="{x:Bind ViewModel.Theme.Value.Surface.ContainerLowest, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>

                <local:ColorCellView Grid.Row="0" Grid.Column="1" Colors="{x:Bind ViewModel.Theme.Value.Other.Background, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
                <local:ColorCellView Grid.Row="1" Grid.Column="1" Colors="{x:Bind ViewModel.Theme.Value.Other.Outline, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
                <local:ColorCellView Grid.Row="2" Grid.Column="1" Colors="{x:Bind ViewModel.Theme.Value.Other.OutlineVariant, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
                <local:ColorCellView Grid.Row="3" Grid.Column="1" Colors="{x:Bind ViewModel.Theme.Value.Other.Scrim, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
                <local:ColorCellView Grid.Row="4" Grid.Column="1" Colors="{x:Bind ViewModel.Theme.Value.Other.Error, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>
                <local:ColorCellView Grid.Row="5" Grid.Column="1" Colors="{x:Bind ViewModel.Theme.Value.Other.ErrorContainer, Mode=OneWay}" OnColorChanged="{x:Bind ViewModel.OnColorChanged}"/>

            </Grid>
        </Grid>
    </Grid>
</Page>
